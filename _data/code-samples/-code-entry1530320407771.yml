_id: ee44f160-7c00-11e8-8b1d-b1f86f4e9ab6
author: whicker
notes: >-
  Unloading cargo from a pier to random locations within an area. Uses the same
  code for random merchants more or less. By putting in your lat/long as 4
  digits with no decimal - 1234 instead of 12.34 and then dividing by 100 you
  can get a more precise area. You need to know the dbid of the cargo (and the
  name of the pier), and  what the unit will be called, the first one is like
  `inf #100` and then they go in sequence. Can only do one db type at a time.
code: "math.randomseed(os.time())\r\n\r\nlocal unitNumber = 104\r\nfor i = 1,40 do\r\nredo_count = 0\r\n::redo::\r\nlocal lat_var = math.random(1,(9999))\r\nlocal lon_var = math.random(1,(9999))\r\nv_lat = math.random(1927,1939)/100 + (lat_var/(999990)) --(for more precision do 4 digits with no period then divide by 100) change the first set (south is negative) to your specified minimum and maximum latitude values; it's important that the first number is smaller than the second.\r\n\r\nv_lon = math.random(-8139,-8108)/100 + (lon_var/(999990)) --change first set (west is negative!) to your specified minimum and maximum longitude values; it's important that the first number is smaller than the second.\r\n\r\nelevation = World_GetElevation({latitude=v_lat, longitude=v_lon})\r\nif elevation < 2 then --Checks to see if point is on land (meters?), adjust as you please\r\n\r\nredo_count = redo_count + 1\r\nprint(\"spot not suitable \" ..redo_count)\r\nif redo_count >50 then\r\nprint (redo_count .. 'not able to find a suitable spot for placement. Re-check latitude and longitude settings')\r\nbreak --this cuts the loop if there are no suitable positions found after 50 tries, prevents infinite loop/game freeze\r\n\r\nelse\r\ngoto redo --retries the placement if the water is too shallow\r\n\r\nend\r\nend\r\n--unload a cargo unit - first is qty, then dbid of cargo\r\nScenEdit_UnloadCargo('Port of Grand Cayman', { {1,2884}}) \r\n-- get that units lat and long, got to know the seqence number of the unit name \r\nlocal a =ScenEdit_GetUnit({ unitname='Inf #'..unitNumber}) \r\na.course = {{ lat =a.latitude, lon=a.longitude}, {lat=v_lat, lon=v_lon} } \r\nunitNumber = unitNumber + 1\r\nprint (a.name..' was created on land with an elevation of '..elevation..'m at ' ..a.latitude..', '..a.longitude)\r\nend"
date: 1530320407
