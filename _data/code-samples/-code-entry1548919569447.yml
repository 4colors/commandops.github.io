_id: 7a729fd0-2529-11e9-8373-bb00b160a353
author: whicker
notes: >-
  Function to place a ship/sub/group at a random distance from its current
  location. You can set the minimum acceptable depth as well as a bearing range
  to control which direction - if it is 1 and 360 then it can be anywhere
  around. If it is 180 and 270 then it would be anywhere southwest of the
  current location.
code: "function placeShipRandomly(side, ship, distance, bmin, bmax, mindepth)\r\n    math.randomseed(os.time()) \r\n    local triggerUnit = ScenEdit_GetUnit({name=ship})\r\n    if triggerUnit ~= nil then\r\n        local redo_count = 0 --prevents infinite loop/game freeze \r\n        ::redo:: \r\n        local d = math.random(1,distance)\r\n        local b = math.random(bmin,bmax)\r\n        local point = ScenEdit_AddReferencePoint( {side=side, name='possible'..redo_count, RelativeTo=ship, bearing=b ,distance=d })\r\n        -- using addRP's ability to set the points bearing and distance relative to an existing unit as the new location for the unit\r\n        ScenEdit_DeleteReferencePoint ({side=side, name='possible'..redo_count}) --should be ok to delete, just need the values\r\n        elevation = World_GetElevation({latitude=point.latitude, longitude=point.longitude}) -- get elevation of new RP to see if it is suitable\r\n        print(elevation)\r\n            if elevation < mindepth then -- check if the new points depth is ok, if so assign the unit to the RPs lat/long\r\n            triggerUnit.latitude = point.latitude\r\n            triggerUnit.longitude = point.longitude\r\n            return  --exit as we are done\r\n            end\r\n        --print(point)\r\n        redo_count = redo_count + 1 --if we get this far the elevation check failed\r\n        if redo_count >50 then --prevents infinite loop/game freeze \r\n        print ('unit was not able to find a suitable spot for placement, ship not moved') \r\n        return\r\n        else \r\n        goto redo --retries the placement if the water is too shallow \r\n        end \r\n    else\r\n    print(\"Unit does not exist\")\r\n    end\r\nend\r\n\r\nlocal side = 'Blue'\r\nlocal ship = 'Group 106' --can be group or individual ship or sub\r\nlocal distance = 250 -- max distance in miles away from starting point\r\nlocal bearignMin = 1 -- you can control the direction by adjusting the min and max bearing\r\nlocal bearingMax = 360 -- 1 and 360 is anywhere around, 90,180 would be anywhere below etc.\r\nlocal minDepth = -1000 --meters, negative \r\n\r\nplaceShipRandomly(side, ship, distance, bearignMin, bearingMax, minDepth) -- call the function and pass in the parameters"
date: 1548919569
